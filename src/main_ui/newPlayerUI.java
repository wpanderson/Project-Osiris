/**
 * newPlayerUI.java
 * 
 * Purpose: UI for user to input data to create a new player as well as an
 * NPC or Enemy of similar type to a player character. Once all data has been
 * entered user will select the "add" button which will call DATABASE from 
 * MainUI.java and add the new player, npc, or enemy to the database to be 
 * displayed.
 */
package main_ui;

import D5DataStructures.Entity;
import D5DataStructures.Player;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JCheckBox;

/**
 *
 * @author Weston Anderson
 */
public class newPlayerUI extends javax.swing.JFrame {

    /**
     * Creates new form newPlayerUI
     */
    public newPlayerUI() {
        initComponents();
    }
    /**
     * Passes in reference to MainGUI so it can be referenced from newPlayerUI
     */
    public newPlayerUI(MainGUI ui)
    {
        this.ui = ui;
        initComponents();
    }
    private MainGUI ui;
    private int strAdd = 2;
    private int dexAdd = 0;
    private int conAdd = 0;
    private int intAdd = 0;
    private int wisAdd = 0;
    private int charAdd = 1;
    private Entity.Race characterRace = Entity.Race.DRAGONBORN;
    private Entity.Class characterClass = Entity.Class.BARBARIAN;
    private Entity.Align1 align1 = Entity.Align1.LAWFUL;
    private Entity.Align2 align2 = Entity.Align2.GOOD;
    private boolean[] playerSkills = {false,false,false,false,false,false,false,
        false,false,false,false,false,false,false,false,false,false,false};
    private int[] playerAttributes = {0,0,0,0,0,0};
    
    private int profBonus = 0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleJlabel = new javax.swing.JLabel();
        addJButton = new javax.swing.JButton();
        cancelJButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        playerSkillsJPanel = new javax.swing.JPanel();
        acrobaticsJCheckbox = new javax.swing.JCheckBox();
        animalJCheckbox = new javax.swing.JCheckBox();
        arcanaJCheckbox = new javax.swing.JCheckBox();
        athleticsJCheckbox = new javax.swing.JCheckBox();
        deceptionJCheckbox = new javax.swing.JCheckBox();
        historyJCheckbox = new javax.swing.JCheckBox();
        insightJCheckbox = new javax.swing.JCheckBox();
        intimidationJCheckbox = new javax.swing.JCheckBox();
        investigationJCheckbox = new javax.swing.JCheckBox();
        medicineJCheckbox = new javax.swing.JCheckBox();
        natureJCheckbox = new javax.swing.JCheckBox();
        perceptionJCheckbox = new javax.swing.JCheckBox();
        performanceJCheckbox = new javax.swing.JCheckBox();
        persuasionJCheckbox = new javax.swing.JCheckBox();
        religionJCheckbox = new javax.swing.JCheckBox();
        sleightJComboBox = new javax.swing.JCheckBox();
        stealthJComboBox = new javax.swing.JCheckBox();
        survivalJComboBox = new javax.swing.JCheckBox();
        saves_proficienciesJPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        savesJPanel = new javax.swing.JPanel();
        strengthSaveJComboBox = new javax.swing.JCheckBox();
        dexteritySaveJComboBox = new javax.swing.JCheckBox();
        constitutionSaveJComboBox = new javax.swing.JCheckBox();
        intelligenceSaveJComboBox = new javax.swing.JCheckBox();
        wisdomSaveJComboBox = new javax.swing.JCheckBox();
        charismaSaveJComboBox = new javax.swing.JCheckBox();
        character_traitsJPanel = new javax.swing.JPanel();
        lvlJLabel2 = new javax.swing.JLabel();
        traitsJPanel = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        alignmentJComboBox = new javax.swing.JComboBox();
        playerInfoJPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        playerNameJTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        characterNameJTextField = new javax.swing.JTextField();
        lvlJLabel = new javax.swing.JLabel();
        levelJComboBox = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        playerRaceJComboBox = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        subraceJPanel = new javax.swing.JPanel();
        noRaceJPanel = new javax.swing.JPanel();
        dwarfSubraceJPanel = new javax.swing.JPanel();
        dwarfJComboBox = new javax.swing.JComboBox();
        elfSuraceJPanel = new javax.swing.JPanel();
        elfJComboBox = new javax.swing.JComboBox();
        HalflingJPanel = new javax.swing.JPanel();
        halflingJComboBox = new javax.swing.JComboBox();
        gnomeJPanel = new javax.swing.JPanel();
        gnomeJComboBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        singleClassJComboBox = new javax.swing.JComboBox();
        lvlJLabel1 = new javax.swing.JLabel();
        characterHPJTextField = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        attributesJPanel = new javax.swing.JPanel();
        strengthJLabel = new javax.swing.JLabel();
        strengthJTextField = new javax.swing.JTextField();
        dexterityJLabel = new javax.swing.JLabel();
        dexterityJTextField = new javax.swing.JTextField();
        constitutionJLabel = new javax.swing.JLabel();
        constitutionJTextField = new javax.swing.JTextField();
        intelligenceJLabel = new javax.swing.JLabel();
        intelligenceJTextField = new javax.swing.JTextField();
        wisdomJLabel = new javax.swing.JLabel();
        wisdomJTextField = new javax.swing.JTextField();
        charismaJLabel = new javax.swing.JLabel();
        charismaJTextField = new javax.swing.JTextField();
        additionsJPanel = new javax.swing.JPanel();
        playerStrengthModifierJLabel = new javax.swing.JLabel();
        playerDexterityModifierJLabel = new javax.swing.JLabel();
        playerConstitutionModifierJLabel = new javax.swing.JLabel();
        playerIntelligenceModifierJLabel = new javax.swing.JLabel();
        playerWisdomModifierJLabel = new javax.swing.JLabel();
        playerCharismaModifierJLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        titleJlabel.setFont(new java.awt.Font("Calibri", 0, 84)); // NOI18N
        titleJlabel.setText("New Player");

        addJButton.setText("Add");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });

        cancelJButton.setText("Cancel");
        cancelJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelJButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Skills:");

        playerSkillsJPanel.setLayout(new java.awt.GridLayout(9, 2));

        acrobaticsJCheckbox.setText("Acrobatics");
        acrobaticsJCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acrobaticsJCheckboxActionPerformed(evt);
            }
        });
        playerSkillsJPanel.add(acrobaticsJCheckbox);

        animalJCheckbox.setText("Animal Handling");
        playerSkillsJPanel.add(animalJCheckbox);

        arcanaJCheckbox.setText("Arcana");
        playerSkillsJPanel.add(arcanaJCheckbox);

        athleticsJCheckbox.setText("Athletics");
        playerSkillsJPanel.add(athleticsJCheckbox);

        deceptionJCheckbox.setText("Deception");
        playerSkillsJPanel.add(deceptionJCheckbox);

        historyJCheckbox.setText("History");
        playerSkillsJPanel.add(historyJCheckbox);

        insightJCheckbox.setText("Insight");
        playerSkillsJPanel.add(insightJCheckbox);

        intimidationJCheckbox.setText("Intimidation");
        playerSkillsJPanel.add(intimidationJCheckbox);

        investigationJCheckbox.setText("Investigation");
        playerSkillsJPanel.add(investigationJCheckbox);

        medicineJCheckbox.setText("Medicine");
        playerSkillsJPanel.add(medicineJCheckbox);

        natureJCheckbox.setText("Nature");
        playerSkillsJPanel.add(natureJCheckbox);

        perceptionJCheckbox.setText("Perception");
        playerSkillsJPanel.add(perceptionJCheckbox);

        performanceJCheckbox.setText("Performance");
        playerSkillsJPanel.add(performanceJCheckbox);

        persuasionJCheckbox.setText("Persuasion");
        playerSkillsJPanel.add(persuasionJCheckbox);

        religionJCheckbox.setText("Religion");
        playerSkillsJPanel.add(religionJCheckbox);

        sleightJComboBox.setText("Sleight Of Hand");
        playerSkillsJPanel.add(sleightJComboBox);

        stealthJComboBox.setText("Stealth");
        playerSkillsJPanel.add(stealthJComboBox);

        survivalJComboBox.setText("Survival");
        playerSkillsJPanel.add(survivalJComboBox);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(playerSkillsJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(19, 19, 19))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playerSkillsJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel4.setText("Saves and Proficiencies:");

        savesJPanel.setLayout(new java.awt.GridLayout(3, 2));

        strengthSaveJComboBox.setText("Strength");
        strengthSaveJComboBox.setEnabled(false);
        savesJPanel.add(strengthSaveJComboBox);

        dexteritySaveJComboBox.setText("Dexterity");
        dexteritySaveJComboBox.setEnabled(false);
        savesJPanel.add(dexteritySaveJComboBox);

        constitutionSaveJComboBox.setText("Consitution");
        constitutionSaveJComboBox.setEnabled(false);
        savesJPanel.add(constitutionSaveJComboBox);

        intelligenceSaveJComboBox.setText("Intelligence");
        intelligenceSaveJComboBox.setEnabled(false);
        savesJPanel.add(intelligenceSaveJComboBox);

        wisdomSaveJComboBox.setText("Wisdom");
        wisdomSaveJComboBox.setEnabled(false);
        savesJPanel.add(wisdomSaveJComboBox);

        charismaSaveJComboBox.setText("Charisma");
        charismaSaveJComboBox.setEnabled(false);
        savesJPanel.add(charismaSaveJComboBox);

        javax.swing.GroupLayout saves_proficienciesJPanelLayout = new javax.swing.GroupLayout(saves_proficienciesJPanel);
        saves_proficienciesJPanel.setLayout(saves_proficienciesJPanelLayout);
        saves_proficienciesJPanelLayout.setHorizontalGroup(
            saves_proficienciesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(saves_proficienciesJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(saves_proficienciesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(savesJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        saves_proficienciesJPanelLayout.setVerticalGroup(
            saves_proficienciesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(saves_proficienciesJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(savesJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lvlJLabel2.setText("Character Traits:");

        traitsJPanel.setLayout(new java.awt.GridLayout(7, 2));

        jLabel14.setText("Age");
        traitsJPanel.add(jLabel14);
        traitsJPanel.add(jTextField2);

        jLabel15.setText("Height");
        traitsJPanel.add(jLabel15);
        traitsJPanel.add(jTextField1);

        jLabel16.setText("Weight");
        traitsJPanel.add(jLabel16);
        traitsJPanel.add(jTextField4);

        jLabel17.setText("Eyes");
        traitsJPanel.add(jLabel17);
        traitsJPanel.add(jTextField3);

        jLabel18.setText("Skin");
        traitsJPanel.add(jLabel18);
        traitsJPanel.add(jTextField6);

        jLabel19.setText("Hair");
        traitsJPanel.add(jLabel19);
        traitsJPanel.add(jTextField5);

        jLabel20.setText("Allignment");
        traitsJPanel.add(jLabel20);

        alignmentJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Lawful good", "Neutral good", "Chaotic good", "Lawful neutral", "Neutral", "Chaotic neutral", "Lawful evil", "Neutral evil", "Chaotic evil" }));
        alignmentJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alignmentJComboBoxActionPerformed(evt);
            }
        });
        traitsJPanel.add(alignmentJComboBox);

        javax.swing.GroupLayout character_traitsJPanelLayout = new javax.swing.GroupLayout(character_traitsJPanel);
        character_traitsJPanel.setLayout(character_traitsJPanelLayout);
        character_traitsJPanelLayout.setHorizontalGroup(
            character_traitsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(character_traitsJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(character_traitsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(character_traitsJPanelLayout.createSequentialGroup()
                        .addComponent(traitsJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(character_traitsJPanelLayout.createSequentialGroup()
                        .addComponent(lvlJLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(185, 185, 185))))
        );
        character_traitsJPanelLayout.setVerticalGroup(
            character_traitsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(character_traitsJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lvlJLabel2)
                .addGap(12, 12, 12)
                .addComponent(traitsJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        playerInfoJPanel.setLayout(new java.awt.GridLayout(7, 2));

        jLabel1.setText("Player Name:");
        playerInfoJPanel.add(jLabel1);
        playerInfoJPanel.add(playerNameJTextField);

        jLabel2.setText("Character Name:");
        playerInfoJPanel.add(jLabel2);
        playerInfoJPanel.add(characterNameJTextField);

        lvlJLabel.setText("Level:");
        playerInfoJPanel.add(lvlJLabel);

        levelJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" }));
        playerInfoJPanel.add(levelJComboBox);

        jLabel10.setText("Race:");
        playerInfoJPanel.add(jLabel10);

        playerRaceJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Dragonborn", "Dwarf", "Elf", "Gnome", "Half-Elf", "Half-Orc", "Halfling", "Human", "Tiefling" }));
        playerRaceJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerRaceJComboBoxActionPerformed(evt);
            }
        });
        playerInfoJPanel.add(playerRaceJComboBox);

        jLabel13.setText("Sub Race:");
        playerInfoJPanel.add(jLabel13);

        subraceJPanel.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout noRaceJPanelLayout = new javax.swing.GroupLayout(noRaceJPanel);
        noRaceJPanel.setLayout(noRaceJPanelLayout);
        noRaceJPanelLayout.setHorizontalGroup(
            noRaceJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 167, Short.MAX_VALUE)
        );
        noRaceJPanelLayout.setVerticalGroup(
            noRaceJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 22, Short.MAX_VALUE)
        );

        subraceJPanel.add(noRaceJPanel, "none");

        dwarfJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Hill Dwarf", "Mountain Dwarf" }));
        dwarfJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dwarfJComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dwarfSubraceJPanelLayout = new javax.swing.GroupLayout(dwarfSubraceJPanel);
        dwarfSubraceJPanel.setLayout(dwarfSubraceJPanelLayout);
        dwarfSubraceJPanelLayout.setHorizontalGroup(
            dwarfSubraceJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dwarfJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        dwarfSubraceJPanelLayout.setVerticalGroup(
            dwarfSubraceJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dwarfSubraceJPanelLayout.createSequentialGroup()
                .addComponent(dwarfJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        subraceJPanel.add(dwarfSubraceJPanel, "dwarf");

        elfJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "High Elf", "Wood Elf", "Dark Elf" }));
        elfJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elfJComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout elfSuraceJPanelLayout = new javax.swing.GroupLayout(elfSuraceJPanel);
        elfSuraceJPanel.setLayout(elfSuraceJPanelLayout);
        elfSuraceJPanelLayout.setHorizontalGroup(
            elfSuraceJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(elfJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        elfSuraceJPanelLayout.setVerticalGroup(
            elfSuraceJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(elfSuraceJPanelLayout.createSequentialGroup()
                .addComponent(elfJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        subraceJPanel.add(elfSuraceJPanel, "elf");

        halflingJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Lightfoot", "Stout" }));
        halflingJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                halflingJComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout HalflingJPanelLayout = new javax.swing.GroupLayout(HalflingJPanel);
        HalflingJPanel.setLayout(HalflingJPanelLayout);
        HalflingJPanelLayout.setHorizontalGroup(
            HalflingJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(halflingJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        HalflingJPanelLayout.setVerticalGroup(
            HalflingJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HalflingJPanelLayout.createSequentialGroup()
                .addComponent(halflingJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        subraceJPanel.add(HalflingJPanel, "halfling");

        gnomeJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Forest Gnome", "Rock Gnome" }));
        gnomeJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gnomeJComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout gnomeJPanelLayout = new javax.swing.GroupLayout(gnomeJPanel);
        gnomeJPanel.setLayout(gnomeJPanelLayout);
        gnomeJPanelLayout.setHorizontalGroup(
            gnomeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gnomeJComboBox, 0, 167, Short.MAX_VALUE)
        );
        gnomeJPanelLayout.setVerticalGroup(
            gnomeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gnomeJPanelLayout.createSequentialGroup()
                .addComponent(gnomeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        subraceJPanel.add(gnomeJPanel, "gnome");

        playerInfoJPanel.add(subraceJPanel);

        jLabel5.setText("Class:");
        playerInfoJPanel.add(jLabel5);

        singleClassJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Barbarian", "Bard", "Cleric", "Druid", "Fighter", "Monk", "Paladin", "Ranger", "Rouge", "Sorcerer", "Warlock", "Wizard" }));
        singleClassJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singleClassJComboBoxActionPerformed(evt);
            }
        });
        playerInfoJPanel.add(singleClassJComboBox);

        lvlJLabel1.setText("HP:");
        playerInfoJPanel.add(lvlJLabel1);
        playerInfoJPanel.add(characterHPJTextField);

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setText("Attributes:");

        attributesJPanel.setToolTipText("");
        attributesJPanel.setLayout(new java.awt.GridLayout(6, 3));

        strengthJLabel.setText("Strength:");
        attributesJPanel.add(strengthJLabel);

        strengthJTextField.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        strengthJTextField.setText("10");
        attributesJPanel.add(strengthJTextField);

        dexterityJLabel.setText("Dexterity:");
        attributesJPanel.add(dexterityJLabel);

        dexterityJTextField.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        dexterityJTextField.setText("10");
        attributesJPanel.add(dexterityJTextField);

        constitutionJLabel.setText("Constitution:");
        attributesJPanel.add(constitutionJLabel);

        constitutionJTextField.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        constitutionJTextField.setText("10");
        attributesJPanel.add(constitutionJTextField);

        intelligenceJLabel.setText("Intelligence:");
        attributesJPanel.add(intelligenceJLabel);

        intelligenceJTextField.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        intelligenceJTextField.setText("10");
        attributesJPanel.add(intelligenceJTextField);

        wisdomJLabel.setText("Wisdom:");
        attributesJPanel.add(wisdomJLabel);

        wisdomJTextField.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        wisdomJTextField.setText("10");
        attributesJPanel.add(wisdomJTextField);

        charismaJLabel.setText("Charisma:");
        attributesJPanel.add(charismaJLabel);

        charismaJTextField.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        charismaJTextField.setText("10");
        attributesJPanel.add(charismaJTextField);

        additionsJPanel.setLayout(new java.awt.GridLayout(6, 1));

        playerStrengthModifierJLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        playerStrengthModifierJLabel.setText("+0");
        additionsJPanel.add(playerStrengthModifierJLabel);

        playerDexterityModifierJLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        playerDexterityModifierJLabel.setText("+0");
        additionsJPanel.add(playerDexterityModifierJLabel);

        playerConstitutionModifierJLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        playerConstitutionModifierJLabel.setText("+0");
        additionsJPanel.add(playerConstitutionModifierJLabel);

        playerIntelligenceModifierJLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        playerIntelligenceModifierJLabel.setText("+0");
        additionsJPanel.add(playerIntelligenceModifierJLabel);

        playerWisdomModifierJLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        playerWisdomModifierJLabel.setText("+0");
        additionsJPanel.add(playerWisdomModifierJLabel);

        playerCharismaModifierJLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        playerCharismaModifierJLabel.setText("+0");
        additionsJPanel.add(playerCharismaModifierJLabel);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(attributesJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(additionsJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(attributesJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(additionsJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titleJlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 748, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(playerInfoJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(character_traitsJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(saves_proficienciesJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cancelJButton))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleJlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(25, 25, 25)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(18, 18, 18)
                            .addComponent(saves_proficienciesJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addJButton)
                            .addComponent(cancelJButton)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(playerInfoJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(character_traitsJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Dispose newPlayerUI without getting any information
     * @param evt 
     */
    private void cancelJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelJButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelJButtonActionPerformed
    /**
     * User selects a race, upon selecting appropriate stats increase/decrease 
     * based on modifier of race.
     * NOTE: I haven't included sub classes like hill dwarf or rock gnome
     * which have other attributes tied to them. This will be done at a later
     * time.
     * @param evt 
     */
    private void playerRaceJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerRaceJComboBoxActionPerformed
        CardLayout card = (CardLayout)subraceJPanel.getLayout();
        clearModifiers();
        
        switch (playerRaceJComboBox.getSelectedIndex()) 
        {
            case 0: //Dragonborn +2 Strength +1 Charisma
                playerStrengthModifierJLabel.setText("+2");
                playerCharismaModifierJLabel.setText("+1");
                strAdd = 2;
                charAdd = 1;
                characterRace = characterRace.DRAGONBORN;
                card.show(subraceJPanel, "none");
                break;
            case 1: //Dwarf +2 Strength
                playerConstitutionModifierJLabel.setText("+2");
                conAdd = 2;
                characterRace = characterRace.DWARF;
                card.show(subraceJPanel, "dwarf");
                break;
            case 2: //Elf +2 Dexterity
                playerDexterityModifierJLabel.setText("+2");
                dexAdd = 2;
                characterRace = characterRace.ELF;
                card.show(subraceJPanel, "elf");
                break;
            case 3: //Gnome
                intAdd = 2;
                characterRace = characterRace.GNOME;
                card.show(subraceJPanel, "gnome");
                break;
            case 4: //Half-Elf
                charAdd = 2;
                characterRace = characterRace.HALF_ELF;
                card.show(subraceJPanel, "none");
                break;
            case 5: //Half-Orc 
                strAdd = 2;
                conAdd = 1;
                characterRace = characterRace.HALF_ORC;
                card.show(subraceJPanel, "none");
                break;
            case 6: //Halfling
                dexAdd = 2;
                characterRace = characterRace.HALFING;
                card.show(subraceJPanel, "halfling");
                break;
            case 7: //Human
                characterRace = characterRace.HUMAN;
                card.show(subraceJPanel, "none");
                break;
            case 8: //Tiefling
                intAdd = 1;
                charAdd = 2;
                characterRace = characterRace.TIEFLING;
                card.show(subraceJPanel, "none");
                break;
                
        }
    }//GEN-LAST:event_playerRaceJComboBoxActionPerformed
    /**
     * Calls DataStorage to add a new player with relevant stats.
     * @param evt 
     */
    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed
       calculations();
        
        ArrayList<String> butts = null;//probably wont need these soon
        Player newPlayer = new Player("",//Source
               characterNameJTextField.getText(),//character name
                Integer.parseInt(characterHPJTextField.getText()),//HP
                butts,//tags
                align1,//Allignment
                align2,//Allignment
                playerAttributes,//Attributes
                characterClass,//class
                characterRace,
                Integer.parseInt(levelJComboBox.getSelectedItem().toString()),//Lvl
                0,//XP
                profBonus,//Prof Bonus
                playerSkills,//skillz
                playerNameJTextField.getText()//player name
                );
        MainGUI.DATABASE.addPlayer(newPlayer);
        
        
        ui.updatePlayerList();
        this.dispose(); //close page
        
        
        
        //newPlayer.addPlayer(p);
    }//GEN-LAST:event_addJButtonActionPerformed
    /**
     * Calculate proficiency bonus, Attributes saving throws, xp, skills acquired
     */
    private void calculations()
    {
        int count = 0;
        for(Component c : playerSkillsJPanel.getComponents())
        {
            if(((JCheckBox)c).isSelected() == true)
            {
                playerSkills[count] = true;
            }
            count += 1;
        }
        //test values to see if it read in correctly
        for(boolean value: playerSkills)
        {
            System.out.println(value);
        }
        
        //proficiency bonus
        int level = Integer.parseInt(levelJComboBox.getSelectedItem().toString());
        if(level <= 4)
        {
            profBonus = 2;
        }
        else if(level <= 8)
        {
            profBonus = 3;
        }
        else if(level <= 12)
        {
            profBonus = 4;
        }
        else if(level <= 16)
        {
            profBonus = 5;
        }
        else if(level <= 20)
        {
            profBonus = 6;
        }
        
        //player attributes
        playerAttributes[0] = Integer.parseInt(strengthJTextField.getText())+strAdd;
        playerAttributes[1] = Integer.parseInt(dexterityJTextField.getText())+dexAdd;
        playerAttributes[2] = Integer.parseInt(constitutionJTextField.getText())+conAdd;
        playerAttributes[3] = Integer.parseInt(intelligenceJTextField.getText())+intAdd;
        playerAttributes[4] = Integer.parseInt(wisdomJTextField.getText())+wisAdd;
        playerAttributes[5] = Integer.parseInt(charismaJTextField.getText())+charAdd;
        
        //Calculate XP based on Level
    }
    
    private void dwarfJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dwarfJComboBoxActionPerformed
        wisAdd = 0;
        strAdd = 2;
        switch (dwarfJComboBox.getSelectedIndex()) 
        {
            case 0: //Hill Dwarf
                if(wisAdd == 0)
                {
                    wisAdd += 1;
                }
                
                break;
            case 1: //Mountain Dwarf
                if(strAdd == 2)
                {
                   strAdd += 2; 
                }
                break;
        }
    }//GEN-LAST:event_dwarfJComboBoxActionPerformed

    private void elfJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elfJComboBoxActionPerformed
        intAdd = 0;
        wisAdd = 0;
        charAdd = 0;
        
        switch (elfJComboBox.getSelectedIndex()) 
        {
            case 0: //High Elves
                if(intAdd == 0)
                {
                    intAdd += 1;
                }
                
                break;
            case 1: //Wood Elves
                if(wisAdd == 0)
                {
                   wisAdd += 1; 
                }
                break;
            case 2: //Dark Elves
                if(charAdd == 0)
                {
                    charAdd += 1;
                }
                break;
        }
    
    }//GEN-LAST:event_elfJComboBoxActionPerformed

    private void halflingJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_halflingJComboBoxActionPerformed
        
        charAdd = 0;
        conAdd = 0;
        switch (halflingJComboBox.getSelectedIndex())
        {
            case 0: //Lightfoot
                charAdd += 1;
                break;
            case 1: //Stout
                conAdd += 1;
                break;
        }
    }//GEN-LAST:event_halflingJComboBoxActionPerformed

    private void gnomeJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gnomeJComboBoxActionPerformed
        
        dexAdd = 0;
        conAdd = 0;
        switch (gnomeJComboBox.getSelectedIndex()) 
        {
            case 0: //Forest Gnome
                if(dexAdd == 0)
                {
                    dexAdd += 1;
                }
                
                break;
            case 1: //Rock Gnome
                if(conAdd == 0)
                {
                   conAdd += 1;
                }
                break;
        }
    }//GEN-LAST:event_gnomeJComboBoxActionPerformed
    /**
     * Based on selection changes the currently selected class enum
     * @param evt 
     */
    private void singleClassJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singleClassJComboBoxActionPerformed
        switch(singleClassJComboBox.getSelectedIndex())
        {
            case 0:
                characterClass = Entity.Class.BARBARIAN;
                break;
            case 1:
                characterClass = Entity.Class.BARD;
                break;
            case 2:
                characterClass = Entity.Class.CLERIC;
                break;
            case 3:
                characterClass = Entity.Class.DRUID;
                break;
            case 4:
                characterClass = Entity.Class.FIGHTER;
                break;
            case 5:
                characterClass = Entity.Class.MONK;
                break;
            case 6:
                characterClass = Entity.Class.PALADIN;
                break;
            case 7:
                characterClass = Entity.Class.RANGER;
                break;
            case 8:
                characterClass = Entity.Class.ROUGE;
                break;
            case 9:
                characterClass = Entity.Class.SORCERER;
                break;
            case 10:
                characterClass = Entity.Class.WARLOCK;
                break;
            case 11:
                characterClass = Entity.Class.WIZARD;
                break;
        }
    }//GEN-LAST:event_singleClassJComboBoxActionPerformed
    /**
     * Based on selection changes private alignment enmus to the specified
     * value.
     * @param evt 
     */
    private void alignmentJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alignmentJComboBoxActionPerformed
        
        switch(alignmentJComboBox.getSelectedIndex())
        {
            case 0:
                align1 = Entity.Align1.LAWFUL;
                align2 = Entity.Align2.GOOD;
                break;
            case 1:
                align1 = Entity.Align1.NEUTRAL;
                align2 = Entity.Align2.GOOD;
                break;
            case 2:
                align1 = Entity.Align1.CHAOTIC;
                align2 = Entity.Align2.GOOD;
                break;
            case 3:
                align1 = Entity.Align1.LAWFUL;
                align2 = Entity.Align2.NEUTRAL;
                break;
            case 4:
                align1 = Entity.Align1.NEUTRAL;
                align2 = Entity.Align2.NEUTRAL;
                break;
            case 5:
                align1 = Entity.Align1.CHAOTIC;
                align2 = Entity.Align2.NEUTRAL;
                break;
            case 6:
                align1 = Entity.Align1.LAWFUL;
                align2 = Entity.Align2.EVIL;
                break;
            case 7:
                align1 = Entity.Align1.NEUTRAL;
                align2 = Entity.Align2.EVIL;
                break;
            case 8:
                align1 = Entity.Align1.CHAOTIC;
                align2 = Entity.Align2.EVIL;
                break;
        }
        System.out.println(align1.toString() + "  " + align2.toString());
    }//GEN-LAST:event_alignmentJComboBoxActionPerformed

    private void acrobaticsJCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acrobaticsJCheckboxActionPerformed

    }//GEN-LAST:event_acrobaticsJCheckboxActionPerformed
    /**
     * clear ability modifiers
     */
    private void clearModifiers()
    {
        playerStrengthModifierJLabel.setText("+0");
        playerDexterityModifierJLabel.setText("+0");
        playerConstitutionModifierJLabel.setText("+0");
        playerIntelligenceModifierJLabel.setText("+0");
        playerWisdomModifierJLabel.setText("+0");
        playerCharismaModifierJLabel.setText("+0");
        strAdd = 0;
        dexAdd = 0;
        conAdd = 0;
        intAdd = 0;
        wisAdd = 0;
        charAdd = 0;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(newPlayerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(newPlayerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(newPlayerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(newPlayerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new newPlayerUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel HalflingJPanel;
    private javax.swing.JCheckBox acrobaticsJCheckbox;
    private javax.swing.JButton addJButton;
    private javax.swing.JPanel additionsJPanel;
    private javax.swing.JComboBox alignmentJComboBox;
    private javax.swing.JCheckBox animalJCheckbox;
    private javax.swing.JCheckBox arcanaJCheckbox;
    private javax.swing.JCheckBox athleticsJCheckbox;
    private javax.swing.JPanel attributesJPanel;
    private javax.swing.JButton cancelJButton;
    private javax.swing.JTextField characterHPJTextField;
    private javax.swing.JTextField characterNameJTextField;
    private javax.swing.JPanel character_traitsJPanel;
    private javax.swing.JLabel charismaJLabel;
    private javax.swing.JTextField charismaJTextField;
    private javax.swing.JCheckBox charismaSaveJComboBox;
    private javax.swing.JLabel constitutionJLabel;
    private javax.swing.JTextField constitutionJTextField;
    private javax.swing.JCheckBox constitutionSaveJComboBox;
    private javax.swing.JCheckBox deceptionJCheckbox;
    private javax.swing.JLabel dexterityJLabel;
    private javax.swing.JTextField dexterityJTextField;
    private javax.swing.JCheckBox dexteritySaveJComboBox;
    private javax.swing.JComboBox dwarfJComboBox;
    private javax.swing.JPanel dwarfSubraceJPanel;
    private javax.swing.JComboBox elfJComboBox;
    private javax.swing.JPanel elfSuraceJPanel;
    private javax.swing.JComboBox gnomeJComboBox;
    private javax.swing.JPanel gnomeJPanel;
    private javax.swing.JComboBox halflingJComboBox;
    private javax.swing.JCheckBox historyJCheckbox;
    private javax.swing.JCheckBox insightJCheckbox;
    private javax.swing.JLabel intelligenceJLabel;
    private javax.swing.JTextField intelligenceJTextField;
    private javax.swing.JCheckBox intelligenceSaveJComboBox;
    private javax.swing.JCheckBox intimidationJCheckbox;
    private javax.swing.JCheckBox investigationJCheckbox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JComboBox levelJComboBox;
    private javax.swing.JLabel lvlJLabel;
    private javax.swing.JLabel lvlJLabel1;
    private javax.swing.JLabel lvlJLabel2;
    private javax.swing.JCheckBox medicineJCheckbox;
    private javax.swing.JCheckBox natureJCheckbox;
    private javax.swing.JPanel noRaceJPanel;
    private javax.swing.JCheckBox perceptionJCheckbox;
    private javax.swing.JCheckBox performanceJCheckbox;
    private javax.swing.JCheckBox persuasionJCheckbox;
    private javax.swing.JLabel playerCharismaModifierJLabel;
    private javax.swing.JLabel playerConstitutionModifierJLabel;
    private javax.swing.JLabel playerDexterityModifierJLabel;
    private javax.swing.JPanel playerInfoJPanel;
    private javax.swing.JLabel playerIntelligenceModifierJLabel;
    private javax.swing.JTextField playerNameJTextField;
    private javax.swing.JComboBox playerRaceJComboBox;
    private javax.swing.JPanel playerSkillsJPanel;
    private javax.swing.JLabel playerStrengthModifierJLabel;
    private javax.swing.JLabel playerWisdomModifierJLabel;
    private javax.swing.JCheckBox religionJCheckbox;
    private javax.swing.JPanel savesJPanel;
    private javax.swing.JPanel saves_proficienciesJPanel;
    private javax.swing.JComboBox singleClassJComboBox;
    private javax.swing.JCheckBox sleightJComboBox;
    private javax.swing.JCheckBox stealthJComboBox;
    private javax.swing.JLabel strengthJLabel;
    private javax.swing.JTextField strengthJTextField;
    private javax.swing.JCheckBox strengthSaveJComboBox;
    private javax.swing.JPanel subraceJPanel;
    private javax.swing.JCheckBox survivalJComboBox;
    private javax.swing.JLabel titleJlabel;
    private javax.swing.JPanel traitsJPanel;
    private javax.swing.JLabel wisdomJLabel;
    private javax.swing.JTextField wisdomJTextField;
    private javax.swing.JCheckBox wisdomSaveJComboBox;
    // End of variables declaration//GEN-END:variables
}
